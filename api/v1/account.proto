syntax = "proto3";

package task_system.scheduler.v1;

import "validate/validate.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";


option go_package = ".;v1";

service Account{
  rpc Ping (Empty) returns (Result) {
    option (google.api.http) = {
      get: "/v1/ping"
    };
  }

  // 发送验证码
  rpc SendVerificationCode(SendVerificationCodeReq) returns (Empty){
    option (google.api.http) = {
      post: "/v1/send_verification_code",
      body: "*"
    };
  }

  // 鉴权
  rpc Auth(AuthReq) returns (AuthResp){
    option (google.api.http) = {
      post: "/v1/auth",
      body: "*"
    };
  }

  // 登录
  rpc Login(LoginReq) returns (LoginResp){
    option (google.api.http) = {
      post: "/v1/login",
      body: "*"
    };
  }

  // 获取小程序授权登录二维码
  rpc GetMiniQRCode(GetMiniQRCodeReq) returns (GetMiniQRCodeResp){
    option (google.api.http) = {
      post: "/v1/get_mini_qrcode",
      body: "*"
    };
  }

  // 小程序登录
  rpc MiniLogin(MiniLoginReq) returns (MiniLoginResp){
    option (google.api.http) = {
      get: "/v1/mini_login"
    };
  }

  // 更新用户信息
  rpc UpdatesUser(UpdatesUserReq) returns (Empty){
    option (google.api.http) = {
      post: "/v1/user/updates",
      body:"*",
    };
  }

  // 获取用户信息
  rpc GetByID(GetByIDReq)returns(GetByIDResp){
    option (google.api.http) = {
      get:"/v1/user/{id}"
    };
  }
}

message Result{
  int64 code = 1;
  string message = 2;
  google.protobuf.Any data = 3;
}

message Empty{

}

message SendVerificationCodeReq{
  string account = 1 [
    (validate.rules).string = {min_len:1}
  ];
  string type = 2 [
    (validate.rules).string = {in:["mobile", "email"]}
  ];
}

message AuthReq{
  string token = 1 [
    (validate.rules).string = {min_len:1}
  ];
}

message AuthResp{

}

message LoginReq{
  string account = 1 [
    (validate.rules).string = {min_len:1}
  ];
  string password = 2 [
    (validate.rules).string = {min_len:1,ignore_empty:true}
  ];
  string code = 3 [
    (validate.rules).string = {min_len:1,ignore_empty:true}
  ];
  string type = 4 [
    (validate.rules).string = {in:["mobile", "email", "password"]}
  ];
}

message LoginResp{
  string token = 1;
}

message GetMiniQRCodeReq{
  string code = 1;
}
message GetMiniQRCodeResp{
  string qrcode = 1;
}

message MiniLoginReq{
  string code = 1 [
    (validate.rules).string = {min_len:1}
  ];
}
message MiniLoginResp{
  string token = 1;
  UserInfo user_info = 2;
}

message UserInfo{
  string nick_name = 1[
    (validate.rules).string = {min_len:1}
  ];
  string avatar_url = 2[
    (validate.rules).string = {min_len:1}
  ];
}

message UpdatesUserReq{
  string nick_name = 2;
  string avatar_url = 3;
}


message GetByIDReq {
  uint64 id = 1;
}
message GetByIDResp {
  UserModel user = 1;
}

message UserModel{
  uint64 id = 1;
  string name = 2;
}