syntax = "proto3";

package task_system.scheduler.v1;

import "validate/validate.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";


option go_package = ".;v1";

service Account{
  rpc Ping (Empty) returns (Result) {
    option (google.api.http) = {
      get: "/v1/ping"
    };
  }
  rpc SmsLogin(SmsLoginReq) returns (SmsLoginResp){
    option (google.api.http) = {
      post: "/v1/sms_login"
    };
  }
  rpc MiniLogin(MiniLoginReq) returns (MiniLoginResp){
    option (google.api.http) = {
      get: "/v1/mini_login"
    };
  }
  rpc UpdatesUser(UpdatesUserReq) returns (Empty){
    option (google.api.http) = {
      post: "/v1/user/updates",
      body:"*",
    };
  }

  rpc GetByID(GetByIDReq)returns(GetByIDResp){
    option (google.api.http) = {
      get:"/v1/user/{id}"
    };
  }
}

message Result{
  int64 code = 1;
  string message = 2;
  google.protobuf.Any data = 3;
}

message Empty{

}

message  SmsLoginReq{
  string mobile = 1 [
    (validate.rules).string = {min_len:1}
  ];
  string code = 2 [
    (validate.rules).string = {min_len:1}
  ];
}

message SmsLoginResp{
  string token = 1;
}

message MiniLoginReq{
  string code = 1 [
    (validate.rules).string = {min_len:1}
  ];
}
message MiniLoginResp{
  string token = 1;
  UserInfo user_info = 2;
}

message UserInfo{
  string nick_name = 1[
    (validate.rules).string = {min_len:1}
  ];
  string avatar_url = 2[
    (validate.rules).string = {min_len:1}
  ];
}

message UpdatesUserReq{
  string nick_name = 2;
  string avatar_url = 3;
}


message GetByIDReq {
  uint64 id = 1;
}
message GetByIDResp {
  UserModel user = 1;
}

message UserModel{
  uint64 id = 1;
  string name = 2;
}